---
---

<section class="py-20 bg-dark-card">
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
    <div class="bg-gradient-to-r from-gaming-green/10 to-gaming-blue/10 rounded-3xl p-12 border border-gaming-green/20">
      <h2 class="text-3xl sm:text-4xl font-bold text-white mb-6">
        Be the First to Know
      </h2>
      <p class="text-xl text-gray-300 mb-8 max-w-2xl mx-auto">
        Join our early access list and get notified when we launch. Plus, get exclusive early features and beta access.
      </p>
      
      <!-- Email Signup Form -->
      <form id="emailForm" class="max-w-md mx-auto mb-8">
        <div class="flex flex-col sm:flex-row gap-4">
          <input
            type="email"
            id="email"
            name="email"
            placeholder="Enter your email address"
            required
            class="flex-1 px-6 py-4 bg-dark-bg border border-dark-border rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-gaming-green focus:ring-2 focus:ring-gaming-green/20 transition-all"
          />
          <button
            type="submit"
            class="bg-gaming-green text-dark-bg px-8 py-4 rounded-lg font-semibold text-lg hover:bg-gaming-green/90 transition-all transform hover:scale-105 whitespace-nowrap"
          >
            Get Early Access
          </button>
        </div>
      </form>
      
      <!-- Success Message (hidden by default) -->
      <div id="successMessage" class="hidden bg-gaming-green/20 border border-gaming-green/50 text-gaming-green px-6 py-4 rounded-lg mb-6">
        <div class="flex items-center justify-center">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          Thanks! We'll notify you when we launch.
        </div>
      </div>
      
      <!-- Error Message (hidden by default) -->
      <div id="errorMessage" class="hidden bg-red-500/20 border border-red-500/50 text-red-400 px-6 py-4 rounded-lg mb-6">
        <div class="flex items-center justify-center">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
          <span id="errorText">Something went wrong. Please try again.</span>
        </div>
      </div>
      
      <div class="text-gray-400 text-sm">
        <p>No spam, just updates about the launch. Unsubscribe anytime.</p>
      </div>
      
      <!-- What you'll get -->
      <div class="mt-12 grid grid-cols-1 md:grid-cols-3 gap-6">
        <div class="text-center">
          <div class="w-12 h-12 bg-gaming-green/20 rounded-lg flex items-center justify-center mx-auto mb-4">
            <svg class="w-6 h-6 text-gaming-green" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
          </div>
          <h3 class="text-white font-semibold mb-2">Early Access</h3>
          <p class="text-gray-400 text-sm">Be among the first to try the app before public launch</p>
        </div>
        
        <div class="text-center">
          <div class="w-12 h-12 bg-gaming-green/20 rounded-lg flex items-center justify-center mx-auto mb-4">
            <svg class="w-6 h-6 text-gaming-green" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5zM12 17H7a3 3 0 01-3-3V8a3 3 0 013-3h10a3 3 0 013 3v4"></path>
            </svg>
          </div>
          <h3 class="text-white font-semibold mb-2">Launch Updates</h3>
          <p class="text-gray-400 text-sm">Get notified immediately when we go live</p>
        </div>
        
        <div class="text-center">
          <div class="w-12 h-12 bg-gaming-green/20 rounded-lg flex items-center justify-center mx-auto mb-4">
            <svg class="w-6 h-6 text-gaming-green" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"></path>
            </svg>
          </div>
          <h3 class="text-white font-semibold mb-2">Exclusive Features</h3>
          <p class="text-gray-400 text-sm">Access to beta features and special content</p>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('emailForm') as HTMLFormElement;
    const successMessage = document.getElementById('successMessage');
    const errorMessage = document.getElementById('errorMessage');
    const errorText = document.getElementById('errorText');

    form?.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = new FormData(form);
      const email = formData.get('email');
      
      // Hide any previous messages
      successMessage?.classList.add('hidden');
      errorMessage?.classList.add('hidden');
      
      // Disable submit button
      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const originalText = submitButton?.textContent;
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.textContent = 'Submitting...';
      }
      
      try {
        const response = await fetch('/api/signup', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email: email })
        });
        
        const result = await response.json();
        
        if (response.ok) {
          // Show success message
          successMessage?.classList.remove('hidden');
          form.reset();
        } else {
          // Show error message
          if (errorText) {
            errorText.textContent = result.error || 'Something went wrong. Please try again.';
          }
          errorMessage?.classList.remove('hidden');
        }
      } catch (error) {
        // Show error message
        if (errorText) {
          errorText.textContent = 'Network error. Please check your connection and try again.';
        }
        errorMessage?.classList.remove('hidden');
      } finally {
        // Re-enable submit button
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.textContent = originalText;
        }
      }
    });
  });
</script>